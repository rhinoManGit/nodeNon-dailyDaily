1， node请求中，一旦有html返回的时候才能够设置res.write,或者res.heander;也就是说一个页面中的请求中
有一个主的请求是会带http的头部信息回来的，这个请求就是一次访问一个页面的时候主请求。一旦这个主请求一
回来之后就会导致后面的请求在设置头部或者什么的额时候报错：can `t set headers after send; 这里面也说了
另一个问题，就是一个请求中，只能允许一个请求走controll，假如我们访问一个请求的时候除了主请求进了controll
此处发出一个异步IO.....正在执行，同时有另一个静态文件也充当了主请求（第一，也进了lcontroll,触发了res.end(),提前结束了请求。或者，
在其他地方返回了一个text/plain, 如，res.render，都会触发当前的主请求提前关闭，而报错（上面的错误））。


如果一个请求是.png， 而网页请求是/index.html（需要进control的）。但是因为这个图片访问失败了，触发了res.render。这样
就抢占了index.html的res,两个混在一起了。从而触发了上面的错误。也就是说请求的判断逻辑其实根据请求的类型来判断的，电脑
很容易被蒙蔽，一旦这样就会报错。更主要的原因是凡是res.end,res.send,res.render都是调用了同一个方法，所以就混淆了。