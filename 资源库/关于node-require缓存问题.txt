nodejs中一个很好的缓存机制就是require的缓存了；

不管你的文件是exports抛出还是module.exports抛出。原理都是一样的，
原理：nodejs在启动的时候会把所有的require到的文件一次性的读入进来，然后自调用的和可执行的都会执行一遍，执行之后会把当前这个文件的返回值缓存到内存（记住，一定是这个模块的返回值，就是执行之后最后丢出来的值）。后面每次调用（require）都直接拿这个值来用，而不会反复
require 然后 执行..。

而且，比如一个文件a,被三个文件require了，但是最后面这个a文件只会执行一次，就是那个最先开始执行一次，后面的文件
虽然也是require了，但是其实都是只是require之前第一次执行的那个值而已。所以写一个a文件让他自调用的这种是最好的，
只会执行一次，后面就全部是缓存了。。，如果不是自调用的话那就是每次执行函数都会再跑一遍。

哈哈哈
所以也就说明了，module.exports及exports就是一个很好的全局的媒介，相当于浏览器中的Windows
