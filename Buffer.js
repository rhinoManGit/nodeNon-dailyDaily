/**
 * Created by wd14931 on 2017/5/2.
 */

/* 1. 变量的表示和存储
 *
 * 比如我们看到的字符串和数字分别是ASCII和十进制表示的；
 * buffer中的元素是用十六进制的 0-255 之间的两个数字表示的；
 * 到底有什么区别呢？
 * 其实没有什么的区别，唯一的区别是每个变量在内存中占用的空间的不一样的，
 * 他们都是定义之后存在了内存上，而怎么表示只是说你用什么样的方式（如，十进制的，十六进制的，或者二进制的
 * 方式来表示该元素，那么这个表示的元素是指的这个变量在内存中的位子呢？还是指这个变量的值呢？）
 * 如果是一个对象（引用类型）的话，那就是指向于这个对象的地址，内存中的地址；即每个相同的对象只会生成一次；
 * 如果是普通变量，那这个表示的就是这个变量的值
 * eg: array 是引用类型
 *
 * 那buffer对象是不是引用类型呢？
 * buffer 中的每个元素都是当前存储的值，而不是地址；
 * 如何判断一个元素是不是引用类型？
 *
 * 默认一个字符，字符，数字是占一个字节，但是选用不同的编码方式对于中文来说占用的字节数会有不同，即不同的
 * 编码占用的内存大小是不一样的。
 */
/*
    buffer 是处理的字节，1kb = 1024字节；
    一个汉字是2-3个字节，字符数字是一个字节；
    由此可以得出来，buffer里面的每个字符其实是值，是一个当前值经过了16进制编译之后的0-255之间的值

    eg. 字符w，转为16进制是77；那输出的就是77
*/

/*
* buffer里面的源代码可以看出来，所有的内存申请都是通过c++里面的SloWBuffer（size）来申请的，node
* 只做分配
*
* */
var v = new Buffer('w');
console.log(v);
